{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "Specifies the name of the Azure Machine Learning service workspace."
        }
      },
      // "location": {
      //   "type": "string",
      //   "defaultValue": "westus2",
      //   "allowedValues": [
      //     "australiaeast",
      //     "brazilsouth",
      //     "canadacentral",
      //     "centralus",
      //     "eastasia",
      //     "eastus",
      //     "eastus2",
      //     "francecentral",
      //     "japaneast",
      //     "koreacentral",
      //     "northcentralus",
      //     "northeurope",
      //     "southeastasia",
      //     "southcentralus",
      //     "uksouth",
      //     "westcentralus",
      //     "westus",
      //     "westus2",
      //     "westeurope"
      //   ],
      //   "metadata": {
      //     "description": "Specifies the location for all resources."
      //   }
      // },
      "sku":{
        "type": "string",
        "defaultValue": "enterprise",
          "allowedValues": [
            "basic",
            "enterprise"
          ],
          "metadata": {
            "description": "Specifies the sku, also referred as 'edition' of the Azure Machine Learning workspace."
          }
      },
       "namespaces_ehtesserato_name": {
            "defaultValue": "ehtesserato",
            "type": "String"
        },
     "functionAppName": {
        "type": "string",
        "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the Azure Function app."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
       "appInsightsLocation": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for Application Insights"
        }
      },
      "functionWorkerRuntime": {
        "type": "string",
        "defaultValue": "node",
        "allowedValues": [
          "dotnet",
          "node",
          "python",
          "java"
        ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "location": {
        "type": "string",
        "metadata": {
          "description": "Required for Linux app to represent runtime stack in the format of 'runtime|runtimeVersion'. For example: 'python|3.9'"
        }
      }
    },

    //Variables

    "variables": {
      "storageAccountName": "[concat('alfeu',uniqueString(resourceGroup().id))]",
      "storageAccountType": "Standard_LRS",
      "keyVaultName": "[concat('kvalf',uniqueString(resourceGroup().id))]",
      "eventHubName": "[concat('eventHub',uniqueString(resourceGroup().id))]",
      "tenantId": "[subscription().tenantId]",
      "applicationInsightsName": "[concat('ai',uniqueString(resourceGroup().id))]",
      "hostingPlanName":"[concat('hosting',uniqueString(resourceGroup().id))]",
      "storageAccountid": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-04-01",
        "name": "[concat('fraud',uniqueString(resourceGroup().id))]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[variables('storageAccountType')]"
        },
        "kind": "StorageV2",
        "properties": {
          "encryption": {
            "services": {
              "blob": {
                "enabled": true
              },
              "file": {
                "enabled": true
              }
            },
            "keySource": "Microsoft.Storage"
          },
          "supportsHttpsTrafficOnly": true
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2018-02-14",
        "name": "[concat('alfvault',uniqueString(resourceGroup().id))]",
        "location": "[parameters('location')]",
        "properties": {
          "tenantId": "[variables('tenantId')]",
          "sku": {
            "name": "standard",
            "family": "A"
          },
          "accessPolicies": [
          ]
        }
      },
      {
        "type": "Microsoft.Insights/components",
        "apiVersion": "2018-05-01-preview",
        "name": "[variables('applicationInsightsName')]",
        "location": "[parameters('location')]",
        "kind": "web",
        "properties": {
          "Application_Type": "web"
        }
      },
      {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2021-11-01",
            "name": "[variables('eventHubName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "disableLocalAuth": false,
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            }
        },
        {

            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('eventHubName'), '/ehfraud')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces',  variables('eventHubName'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('eventHubName'), '/ehfraud/$Default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubName'), 'ehfraud')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('eventHubName'), '/ehfraud/asa-consumer-group-fraud')]",
            "location": "[parameters('location')]",
            "dependsOn":[
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubName'), 'ehfraud')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {}
        },

        //function deployment

        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[concat('funcsite',uniqueString(resourceGroup().id))]",
            "kind": "functionapp,linux",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "name": "[concat('funcsite',uniqueString(resourceGroup().id))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        }
                    ]
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "kind": "linux",
            "properties": {
                "reserved": true
            },
            "sku": {
                "Tier": "Standard",
                "Name": "S1"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            }
        }
  
      ]

}